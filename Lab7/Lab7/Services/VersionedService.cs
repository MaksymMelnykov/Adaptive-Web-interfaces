using ClosedXML.Excel;
using Lab7.Services.Interfaces;
using Microsoft.AspNetCore.Mvc;

namespace Lab7.Services
{
    public class VersionedService : IVersionedService
    {
        public int GetVersion1()
        {
            Random rnd = new Random();
            int number = rnd.Next();
            return number;
        }

        public string GetVersion2()
        {
            return "Hello, World! I'm Maksym and this is API Versioning Practice Work.";
        }

        public byte[] GetVersion3()
        {
            using (var workbook = new XLWorkbook())
            {
                var worksheet = workbook.Worksheets.Add("API Versioning");

                worksheet.Cell("A" + 1).Value = "Name";
                worksheet.Cell("B" + 1).Value = "Version Number";
                worksheet.Cell("C" + 1).Value = "Description";

                worksheet.Cell("A" + 2).Value = "GetVersion1";
                worksheet.Cell("B" + 2).Value = 1.0;
                worksheet.Cell("C" + 2).Value = "The method returns any integer value when called";

                worksheet.Cell("A" + 3).Value = "GetVersion2";
                worksheet.Cell("B" + 3).Value = 2.0;
                worksheet.Cell("C" + 3).Value = "The method returns any text when called";

                worksheet.Cell("A" + 4).Value = "GetVersion3";
                worksheet.Cell("B" + 4).Value = 3.0;
                worksheet.Cell("C" + 4).Value = "The method returns an EXCEL file generated by the server side";

                worksheet.Cell("A" + 5).FormulaA1 = "=MID(A1, 7, 5)";

                worksheet.Cell("C" + 3).Style.Fill.BackgroundColor = XLColor.Almond;

                var rngTable = worksheet.Range("A1:G" + 10);
                rngTable.Style.Border.RightBorder = XLBorderStyleValues.Thin;
                rngTable.Style.Border.BottomBorder = XLBorderStyleValues.Thin;

                worksheet.Columns().AdjustToContents();

                using (var stream = new MemoryStream())
                {
                    workbook.SaveAs(stream);
                    return stream.ToArray();
                }
            }
        }
    }
}
